# This is the configuration file for the METRA algorithm.
train:
  # number of parallel environments for training data collection
  n_rollout_threads: 20
  # number of warmup steps
  warmup_steps: 10000
  # number of steps per train
  train_interval: 50
  # ratio of training iterations to train_interval
  update_per_train: 1
  # logging interval (currently unused)
  log_interval: ~
  # evaluation interval
  eval_interval: 10000
  # whether to use ValueNorm
  use_valuenorm: false
  # whether to use linear learning rate decay
  use_linear_lr_decay: False
  # whether to consider the case of truncation when an episode is done
  use_proper_time_limits: True
  # if set, load models from this directory; otherwise, randomly initialise the models
  model_dir: ~
model:
  # network parameters
  # hidden sizes for mlp module in the network
  hidden_sizes: [256, 256]
  # activation function, choose from sigmoid, tanh, relu, leaky_relu, selu
  activation_func: relu
  # final activation function, choose from sigmoid, tanh, relu, leaky_relu, selu
  final_activation_func: tanh
  # initialization method for network parameters, choose from xavier_uniform_, orthogonal_, ...
  initialization_method: orthogonal_
  # optimizer parameters
  # actor learning rate
  lr: 0.0005
  # critic learning rate
  critic_lr: 0.0005
algo:
  # whether to auto-tune temperature
  auto_alpha: true
  # temperature parameter
  alpha: 0.2
  # alpha learning rate
  alpha_lr: 0.0003
  # discount factor
  gamma: 0.99
  # off-policy buffer size
  buffer_size: 1000000
  # training batch size
  batch_size: 1000
  # coefficient for target model soft update
  polyak: 0.005
  # the number of steps to look ahead
  n_step: 20
  # whether to use huber loss
  use_huber_loss: false
  # whether to use policy active masks
  use_policy_active_masks: True
  # whether to share parameter among actors
  share_param: false
  # whether to use a fixed optimisation order
  fixed_order: False
  # skill dim
  skill_dim: 2
# logger:
#   # logging directory
#   log_dir: "./results"